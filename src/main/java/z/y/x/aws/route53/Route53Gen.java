package z.y.x.aws.route53;

import java.io.StringWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.StringJoiner;

import org.yaml.snakeyaml.Yaml;

import com.amazonaws.services.route53.AmazonRoute53;
import com.amazonaws.services.route53.model.GetHostedZoneRequest;
import com.amazonaws.services.route53.model.GetHostedZoneResult;
import com.amazonaws.services.route53.model.HostedZone;
import com.amazonaws.services.route53.model.ListHostedZonesResult;
import com.amazonaws.services.route53.model.ListResourceRecordSetsRequest;
import com.amazonaws.services.route53.model.ListResourceRecordSetsResult;
import com.amazonaws.services.route53.model.ResourceRecord;
import com.amazonaws.services.route53.model.ResourceRecordSet;

import z.y.x.aws.EC2Client;
import z.y.x.aws.Utils;

/**
 * 
 * @author anishnath
 *
 */

public class Route53Gen {
	
	public String getRoute53(String accessKey, String secretKey, String region, String hostedZoneId) throws Exception {
		
		AmazonRoute53 amazonRoute53 = new EC2Client().getRoute53Client(accessKey, secretKey, region);
		
		List<AWSRoute53Wrapper> awsRoute53WrapperList = new ArrayList<>();
		AWSRoute53Wrapper awsRoute53Wrapper = new AWSRoute53Wrapper();
		List<Route53> list = new ArrayList<Route53>();
		List<Task> listTasks = new ArrayList<Task>();
		
		
		if(hostedZoneId!=null && hostedZoneId.length()>1)
		{
			GetHostedZoneRequest getHostedZoneRequest = new GetHostedZoneRequest().withId(hostedZoneId);
			GetHostedZoneResult hostedZoneResult = amazonRoute53.getHostedZone(getHostedZoneRequest);
			generateAnsible(amazonRoute53, listTasks, hostedZoneResult.getHostedZone());
		}
		else {
			ListHostedZonesResult describeRouteResult = amazonRoute53.listHostedZones();
			for (Iterator iterator = describeRouteResult.getHostedZones().iterator(); iterator.hasNext();) {
				HostedZone hostedZone = (HostedZone) iterator.next();
				generateAnsible(amazonRoute53, listTasks, hostedZone);
			}		
		}
		
		awsRoute53Wrapper.setTasks(listTasks);
		awsRoute53WrapperList.add(awsRoute53Wrapper);
		// awsRoute53Wrapper.setRoute53(list);
		StringWriter writer = new StringWriter();
		Yaml yaml = Utils.getYAML();
		yaml.dump(awsRoute53WrapperList, writer);

		StringBuilder builder = new StringBuilder();
		builder.append("# Generated by the Online Tool 8gwifi.org \n");
		builder.append(writer.toString());
		return builder.toString();
		
	}

	public static void main(String[] args) throws Exception {
		
	}

	private static void generateAnsible(AmazonRoute53 amazonRoute53, List<Task> listTasks, HostedZone hostedZone) {
		ListResourceRecordSetsRequest listResourceRecordSetsRequest = new ListResourceRecordSetsRequest()
				.withHostedZoneId(hostedZone.getId());
		ListResourceRecordSetsResult listResourceRecordSetsResult = amazonRoute53
				.listResourceRecordSets(listResourceRecordSetsRequest);
		//System.exit(1);

		List<ResourceRecordSet> liRecordSets = listResourceRecordSetsResult.getResourceRecordSets();
		for (Iterator iterator2 = liRecordSets.iterator(); iterator2.hasNext();) {
			
			ResourceRecordSet resourceRecordSet = (ResourceRecordSet) iterator2.next();
			Route53 route53 = new Route53();
			Task task = new Task();
			// route53.setRecord(resourceRecordSet.getType());
			route53.setTtl(resourceRecordSet.getTTL());
			route53.setRecord(resourceRecordSet.getName());
			route53.setType(resourceRecordSet.getType());

			List<ResourceRecord> resourceRecord = resourceRecordSet.getResourceRecords();
			StringJoiner joiner = new StringJoiner(" ");
			for (Iterator iterator3 = resourceRecord.iterator(); iterator3.hasNext();) {
				ResourceRecord resourceRecord2 = (ResourceRecord) iterator3.next();
				joiner.add(resourceRecord2.getValue());
			}
			route53.setValue(joiner.toString());
			// route53.setValue(resourceRecordSet.get);
			route53.setZone(hostedZone.getName());
			task.setRoute53(route53);
			listTasks.add(task);

		}
	}

	
}
