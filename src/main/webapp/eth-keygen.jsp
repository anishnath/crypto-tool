<!DOCTYPE html>
<html>
<head>
    <!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
    <script type="application/ld+json">
        {
            "@context" : "http://schema.org",
            "@type" : "SoftwareApplication",
            "name" : "Online libp2p/devp2p Node Key Generator",
            "image" : "https://8gwifi.org/images/site/libp2p.jpg",
            "url" : "https://8gwifi.org/eth-keygen.jsp",
            "author" : {
                "@type" : "Person",
                "name" : "Anish Nath"
            },
            "datePublished" : "2023-05-11",
            "applicationCategory" : [ "libp2p generate" , "devp2p generate" , "online libp2p" , "generare node key" ],
            "downloadUrl" : "https://8gwifi.org/eth-keygen.jsp",
            "operatingSystem" : "Linux,Unix,Windows,Redhat,RHEL,Fedora,Ubuntu,Android,iPhone",
            "requirements" : "Etheruem, Polygon, Matic, Avalanche, Binance Smart Chain, BSC, BNB, Binance, Substrate, Avail, Devp2p, Libp2p",
            "softwareVersion" : "v1.0"
        }
    </script>
    <title>Online Generate Node Key ethereum,polygon, matic, avalanche </title>
    <meta content='text/html; charset=UTF-8' http-equiv='Content-Type'>

    <meta name="keywords" content="libp2p node key generate, devp2p key generate "/>
    <meta name="description" content="Etheruem, Polygon, Matic, Avalanche, Binance Smart Chain, BSC, BNB, Binance, Substrate, Avail, Devp2p, Libp2p" />

    <meta name="robots" content="index,follow" />
    <meta name="googlebot" content="index,follow" />
    <meta name="resource-type" content="document" />
    <meta name="classification" content="tools" />
    <meta name="language" content="en" />

    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <%@ include file="header-script.jsp"%>

    <script>
        function showFields(src) {
            var selectedOption = src.value
            var devp2pFields = document.getElementById("devp2p-fields");
            var libp2pFields = document.getElementById("libp2p-fields");

            if (selectedOption === "devp2p") {
                devp2pFields.style.display = "block";
                libp2pFields.style.display = "none";
            } else {
                devp2pFields.style.display = "none";
                libp2pFields.style.display = "block";
            }
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function() {

            $('#submit').click(function(event) {
                $('#form').delay(200).submit()
            });

            $('#form').submit(function(event) {
                //
                $('#output1').html('<img src="images/712.GIF"> loading...');
                event.preventDefault();
                $.ajax({
                    type : "POST",
                    url : "ETHFunctionality", //this is my servlet

                    data : $("#form").serialize(),
                    success : function(msg) {
                        $('#output').empty();
                        $('#output').append(msg);

                    }
                });
            });
        });
    </script>
</head>

<%@ include file="body-script.jsp"%>

<h1 class="mt-4">Generate Libp2p/Devp2p Node Keys</h1>
<p></p>

<div id="loading" style="display: none;">
    <img src="images/712.GIF" alt="" />Loading!
</div>

<hr>

<form id="form" method="POST">
    <input type="hidden" name="methodName" id="methodName" value="ETH_NODEKEY">

        <label for="key-type2" class="font-weight-bold">Select Node Key Type</label>
        <div class="form-check">
            <input class="form-check-input" onchange="showFields(this)" value="libp2p" type="radio" name="key-type" id="key-type2" checked>
            <label class="form-check-label" for="key-type2">
                Libp2p Node Key (substrate/avail)
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" onchange="showFields(this)" value="devp2p" type="radio" name="key-type" id="key-type1">
            <label class="form-check-label" for="key-type1">
                devp2p Node Key (Eth/Bor)
            </label>
        </div>


    <div id="devp2p-fields" style="display: none">
        <div class="form-group row">
            <label for="ip"  class="font-weight-bold col-sm-2 col-form-label">IP Address</label>
            <div class="col-sm-10">
                <input type="text" class="form-control" name="ip" id="ip" placeholder="10.10.10.20">
            </div>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="enabled" name="sign" id="sign" >
            <label class="form-check-label" for="sign">
                sign:
            </label>
        </div>

        <div class="form-group row">
            <label for="tcp"  class="font-weight-bold col-sm-2 col-form-label">Port</label>
            <div class="col-sm-10">
                <input type="number" class="form-control" value="3103"  name="tcp" id="tcp" placeholder="30303">
            </div>
        </div>

        <div class="form-group row">
            <label for="udp"  class="font-weight-bold col-sm-2 col-form-label">UDP Port</label>
            <div class="col-sm-10">
                <input type="number" class="form-control" value="0"  name="udp" id="udp" placeholder="30304">
            </div>
        </div>

    </div>

    <div id="libp2p-fields">

        <div class="form-group">
            <label for="keyType">Algorithm:</label>
            <select class="form-select" name="keyType" id="keyType" >
                <option value="1">Ed25519</option>
                <option value="2" selected>Secp256k1</option>
                <option value="3">EDCSA</option>
                <option value="0">RSA</option>
            </select>
        </div>

        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="enabled" name="seed" id="seed">
            <label class="form-check-label" for="seed">
                Enable seed
            </label>
        </div>

        <div class="input-group mb-3">
            <input type="number" class="form-control" placeholder="231878" aria-label="seedValue" name="seedValue" id="seedValue">
            <span class="input-group-text" id="basic-addon2">Seed Value</span>
        </div>


        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="enabled" name="marshal_protobuf" id="marshal_protobuf" >
            <label class="form-check-label" for="marshal_protobuf">
                Marshal Protobuf:
            </label>
        </div>

    </div>

    <input class="btn btn-primary" type="submit" id="submit" name="Sign CSR">

</form>
<div id="output"></div>

<hr>

<div class="sharethis-inline-share-buttons"></div>
<%@ include file="thanks.jsp"%>

<hr>

<%@ include file="footer_adsense.jsp"%>

<h2 class="mt-4" id="about nodekeys">About libp2p</h2>
<p>libp2p uses cryptographic key pairs to sign messages and derive unique peer identities (or "peer ids")</p>
<p><strong>Where are keys used?</strong></p>
Keys are used in two places in libp2p. The first is for signing messages. Here are some examples of messages we sign:

<ul>
    <li>IPNS records</li>
    <li>PubSub messages</li>
    <li>SECIO handshake</li>
</ul>
<p>The second is for generating peer ids</p>
<p><strong>What are the different types of keys?</strong></p>
<p>There are two types of keys in libp2p: asymmetric and symmetric.</p>
<p><strong>Asymmetric keys</strong></p>
<p>Asymmetric keys are used for signing messages and generating peer ids. There are four types of asymmetric keys in libp2p:</p>
<ul>
    <li>RSA</li>
    <li>Ed25519</li>
    <li>Secp256k1</li>
    <li>EDCSA</li>
    </ul>
    <p><strong>Symmetric keys</strong></p>
    <p>Symmetric keys are used for encrypting messages. There are two types of symmetric keys in libp2p:</p>
    <ul>
    <li>ChaCha20-Poly1305</li>
    <li>AES-256</li>
    </ul>

<h2 id="devp2p-eth-bor-">DevP2p (eth/bor)</h2>
<h3 id="ethereum-node-records">Ethereum Node Records</h3>
<p>Ethereum Node Records (ENR) usually contains the network endpoints of a node, i.e. the node&#39;s IP addresses and ports. It also holds information about the node&#39;s purpose on the network so others can decide whether to connect to the node</p>
<p>The components of a node record are:</p>
<p>signature: cryptographic signature of record contents
    seq: The sequence number, a 64-bit unsigned integer. Nodes should increase the number whenever the record changes and republish the record.
    The remainder of the record consists of arbitrary key/value pairs</p>
<p>Example:</p>
<pre><code>enr:-IS4QJ4X...-iB</code></pre>



<%@ include file="addcomments.jsp"%>

</div>

<%@ include file="body-close.jsp"%>
