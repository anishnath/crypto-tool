<!DOCTYPE html>
<html>
<head>

	<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
	<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "SoftwareApplication",
  "name" : "ntru Encryption Decryption tool, ntru encryption example,ntru implementation",
  "image" : "https://github.com/anishnath/crypto-tool/blob/master/ntru.png",
  "url" : "https://8gwifi.org/ntrufunctions.jsp",
  "author" : {
    "@type" : "Person",
    "name" : "Anish Nath"
  },
  "datePublished" : "2018-03-19",
  "applicationCategory" : [ "ntru encryption decryption online", "online ntru key generator", "ntru calculate private key online", "ntru generate private key online", "ntru decryption calculator online", "ntru encryption with public key", "EES1087EP2", "EES1087EP2_FAST", "EES1171EP1", "EES1171EP1_FAST", "EES1499EP1",
			"EES1499EP1_FAST", "APR2011_439", "APR2011_439_FAST", "APR2011_743", "APR2011_743_FAST","example ntru algorithm","ntru implementation","ntru cryptosystem"],
  "downloadUrl" : "https://8gwifi.org/ntrufunctions.jsp",
  "operatingSystem" : "Linux,Unix,Windows,Redhat,RHEL,Fedora,Ubuntu,Android,iPhone",
  "requirements" : "ntru algorithm encryption decryption online, generate ntru key pairs and perform encryption and decryption using ntru public and private keys ntru encryption decryption online, online ntru generator,ntru generate public private key online,ntru decryption calculator online,ntru decrypt with public key,ntru encrypt,lattice based cryptography explained,lattice based cryptography for beginners,lattice based cryptography implementation ",
  "softwareVersion" : "v1.0"
}
</script>

	<title>NTRU Encryption Decryption tool, Online NTRU key generator lattice based cryptography implementation </title>
	<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'>

	<meta name="keywords" content="lattice based cryptography implementation,ntru encryption decryption online,online ntru key generator,ntru generate private key online,APR2011_743_FAST,APR2011_743,APR2011_439_FAST,ntru generate public private key,lattice based cryptography,ntru encryption example,ntru implementation,example ntru algorithm,ntru implementation,ntru cryptosystem " />
	<meta name="description" content="lattice based cryptography implementation,ntru encryption decryption online,online ntru key generator,ntru generate private key online,APR2011_743_FAST,APR2011_743,APR2011_439_FAST,ntru generate public private key,lattice based cryptography,example ntru algorithm,ntru encryption example,ntru implementation,example ntru algorithm,ntru implementation,ntru cryptosystem" />

	<meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<%@ include file="include_css.jsp"%>

	<%
		String pubKey = "";
		String privKey = "";
		String errorMsg="";
		String ntru="APR2011_743_FAST";



		if (request.getSession().getAttribute("pubkey")==null) {

		}
		else {
			pubKey = (String)request.getSession().getAttribute("pubkey");
			privKey = (String)request.getSession().getAttribute("privKey");
			ntru = (String)request.getSession().getAttribute("ntru");
			errorMsg = (String)request.getSession().getAttribute("errorMsg");
		}


	%>

	<script type="text/javascript">
		$(document).ready(function() {




			$('#submit').click(function(event) {
				$('#form').delay(200).submit()
			});

			$('#publickeyparam').keyup(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#privatekeyparam').keyup(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});


			$('#message').keyup(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#keysize1').click(function(event) {
				//
				// event.preventDefault();
				$('#form1').delay(200).submit()
			});

			$('#keysize2').click(function(event) {
				//
				// event.preventDefault();
				$('#form1').delay(200).submit()
			});

			$('#keysize3').click(function(event) {
				//
				// event.preventDefault();
				$('#form1').delay(200).submit()
			});

			$('#keysize4').click(function(event) {
				//
				// event.preventDefault();
				$('#form1').delay(200).submit()
			});

			$('#cipherparameter1').click(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#cipherparameter2').click(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#cipherparameter3').click(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#cipherparameter4').click(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#encryptparameter').click(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#decryptparameter').click(function(event) {

				var text = $('#output').find('textarea[name="encrypedmessagetextarea"]').val();
				if ( text != null ) {
					$("#message").val(text);
				}
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});


			$('#form').submit(function(event) {
				//
				$('#output').html('<img src="images/712.GIF"> loading...');
				event.preventDefault();
				$.ajax({
					type : "POST",
					url : "NTRUFunctionality", //this is my servlet

					data : $("#form").serialize(),
					success : function(msg) {
						$('#output').empty();
						$('#output').append(msg);

					}
				});
			});

		});
	</script>
</head>
<body>
<div id="page">
	<%@ include file="include.jsp"%>
	<div id="loading" style="display: none;">
		<img src="images/712.GIF" alt="" />Loading!
	</div>

	<article id="contentWrapper" role="main">
		<section id="content">
			<fieldset name="NTRU">
				<legend>
					<b> NTRU encryption, NTRU implementation </b>
				</legend>
				<fieldset name="NTRU Key Size">
					<legend>
						<b> Key Size </b>
					</legend>

					<form id="form1" method="POST" name="form1" action="NTRUFunctionality">
						<input type="hidden" name="methodName" id="methodName"
							   value="GENERATE_KEYS">
						Generate NTRU Key Size
						<%
							String[] validList = { "EES1087EP2", "EES1087EP2_FAST", "EES1171EP1", "EES1171EP1_FAST", "EES1499EP1",
									"EES1499EP1_FAST", "APR2011_439", "APR2011_439_FAST", "APR2011_743" };
						%>
						<select  name="ntruparam" id="ntruparam">
							<option selected value="APR2011_743_FAST">APR2011_743_FAST</option>
							<%
								for (int i = 0; i < validList.length; i++) {
									String param = validList[i];
							%>
							<option value="<%=param%>"><%=param%></option>
							<%}%>
						</select>
						<fieldset name="NTRU Key">
							<legend>
								<b> Password+Salt unique Combination will generate same NTRU key pair </b>
							</legend>
							Password <input type="text" value="" id="password" name="password" placeholder="For Generating Encrypted keys " size="20">
							Salt     <input type="text" value="" id="salt" name="salt" placeholder="Used for Generating Encrypted keys " size="10">

							</br>
						</fieldset>
						<input type="submit" value="Generate NTRU Keys" >
					</form>
				</fieldset>

				<font color="red" size="4"><%=errorMsg%></font>

				<form id="form" method="POST">
					<input type="hidden" name="methodName" id="methodName"
						   value="CALCULATE_NTRU">

					<input type="hidden" name="p_ntru" id="p_ntru" value="<%=ntru%>">


					<fieldset name="RSA2"   >

						<legend>
							<b> NTRU Encryption/Decryption</b>
						</legend>

						<input checked id="encryptparameter" type="radio" name="encryptdecryptparameter"
							   value="encrypt">Encrypt Message

						<input id="decryptparameter" type="radio" name="encryptdecryptparameter"
							   value="decryprt"> Decrypt Message
						<br>

						<table border="1" style="width:80pc">
							<tr>
								<th>NTRU Public Key </th>
								<th>NTRU Private Key </th>
								<th>lattice based cryptography ntru encryption example </th>
							</tr>

							<tr>
								<td>
									<textarea rows="20" cols="50"  name="publickeyparam" id="publickeyparam"><%= pubKey %></textarea>
								</td>
								<td>
									<textarea rows="20" cols="50"  name="privatekeyparam" id="privatekeyparam"><%= privKey %></textarea>
								</td>


								<td rowspan="3" width="80%">
									<%@ include file="footer_adsense.jsp"%>
									<p><strong>NTRU</strong> is an open source public-key cryptosystem that uses lattice-based cryptography to encrypt and decrypt data. It consists of two algorithms: NTRUEncrypt, which is used for encryption, and NTRUSign, which is used for digital signatures. Unlike other popular public-key cryptosystems, it is resistant to attacks using Shor's algorithm and its performance has been shown to be significantly better. NTRU was patented but was placed in public domain in 2017</p>
									<p><strong>NTRU's</strong> main strengths are high performance and resistance to quantum computer attacks.<br /><strong>NTRU</strong> keys are longer than ECC keys; they can be longer or shorter than RSA keys depending on the security level.<br />T<span style="text-decoration: underline;"><strong>he NTRUSign algorithm has been broken and is included only for historical interest.</strong></span></p>
									<p><strong>NTRUEncrypt remains unbroken;</strong></p>

								</td>

							</tr>

							<tr>

								<td>
									<b>ClearText Message</b><textarea rows="10" cols="40" placeholder="Type Something Here..."  name="message" id="message"></textarea>
								</td>
								<td width="50%">
									<b>output</b><div id="output"></div>
								</td>




							</tr>


						</table>


					</fieldset>
			</fieldset>

			</form>

			<table border="0" style="width:500px">
				<tr>
					<td><%@ include file="footer.jsp"%></td>
				</tr>
			</table>
			<%@ include file="include_security_links.jsp"%>

			<p><strong>NTRU implementation</strong></p>
			<p><strong>Ref:&nbsp;https://github.com/tbuktu/ntru</strong></p>
			<p><br /><strong>N:</strong> number of polynomial coefficients<br /><strong>q:</strong> modulus<br /><strong>df:</strong> number of ones in the private polynomial<br /><strong>dm0:</strong> minimum acceptable number of -1's, 0's, and 1's in the polynomial<br /><strong>maxM1:</strong> maximum absolute value of mTrin.sumCoeffs() or zero to disable this check. Values greater than zero cause the constant coefficient of the message to always be zero.<br /><strong>db:</strong> number of random bits to prepend to the message; should be a multiple of 8<br /><strong>ca:</strong> parameter for the Index Generation Function ({@link IndexGenerator})<br /><strong>minCallsR:</strong> minimum number of hash calls for the IGF to make<br /><strong>minCallsMask:</strong> minimum number of calls to generate the masking polynomial<br /><strong>hashSeed</strong> whether to hash the seed in the MGF first (true) or use the seed directly (false)<br /><strong>oid:</strong> three bytes that uniquely identify the parameter set<br /><strong>sparse:</strong> whether to treat ternary polynomials as sparsely populated<br /><strong>fastFp:</strong> ternary true or False<br /><strong>hashAlga</strong> valid identifier SHA-256</p>
			<p>parameter set that gives 256 bits of security and is optimized for key size<br /><strong>EES1087EP2</strong> =(1087, 2048, 120, 120, 0, 256, 13, 25, 14, true, new byte[] {0, 6, 3}, true, false, "SHA-512");</p>
			<p><strong>EES1087EP2_FAST</strong> = (1087, 2048, 8, 8, 11, 120, 0, 256, 13, 25, 14, true, new byte[] {0, 6, 3}, true, true, "SHA-512");</p>
			<p>parameter set that gives 256 bits of security and is a tradeoff between key size and encryption/decryption speed.<br /><strong>EES1171EP1</strong> = (1171, 2048, 106, 106, 0, 256, 13, 20, 15, true, new byte[] {0, 6, 4}, true, false, "SHA-512");</p>
			<p><strong>EES1171EP1_FAST</strong> = (1171, 2048, 8, 7, 11, 106, 0, 256, 13, 20, 15, true, new byte[] {0, 6, 4}, true, true, "SHA-512");</p>
			<p>parameter set that gives 256 bits of security and is optimized for encryption/decryption speed.<br /><strong>EES1499EP1</strong> = (1499, 2048, 79, 79, 0, 256, 13, 17, 19, true, new byte[] {0, 6, 5}, true, false, "SHA-512");</p>
			<p><strong>EES1499EP1_FAST</strong> = (1499, 2048, 7, 6, 11, 79, 0, 256, 13, 17, 19, true, new byte[] {0, 6, 5}, true, true, "SHA-512");</p>
			<p>parameter set that gives 128 bits of security and uses simple ternary polynomials. */<br /><strong>APR2011_439</strong> = (439, 2048, 146, 130, 126, 128, 12, 32, 9, true, new byte[] {0, 7, 101}, true, false, "SHA-256");</p>
			<p>his parameter set gives 128 bits of security but uses product-form polynomials<br /><strong>APR2011_439_FAST</strong> = (439, 2048, 9, 8, 5, 130, 126, 128, 12, 32, 9, true, new byte[] {0, 7, 101}, true, true, "SHA-256");</p>
			<p>parameter set that gives 256 bits of security and uses simple ternary polynomials<br /><strong>APR2011_743</strong> = (743, 2048, 248, 220, 60, 256, 12, 27, 14, true, new byte[] {0, 7, 105}, false, false, "SHA-512");</p>
			<p>parameter set gives 256 bits(Recommedned)<br /><strong>APR2011_743_FAST</strong> = (743, 2048, 11, 11, 15, 220, 60, 256, 12, 27, 14, true, new byte[] {0, 7, 105}, false, true, "SHA-512");</p>
		</section>



</div>
</body>
</html>