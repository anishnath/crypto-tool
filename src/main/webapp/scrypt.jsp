<!DOCTYPE html>
<html>
<head>
	<title>scrypt Hash Generator, Hash Checker </title>
	<meta content='text/html; charset=UTF-8' http-equiv='Content-Type'>

	<meta name="description"
		  content="scrypt password hash generation online and hash checker scrypt reverse,scrypt hash online,scrypt hash cracker,scrypt decrypt laravel,scrypt password encoder,scrypt encryption,how scrypt works explained  "/>
	<meta name="keywords"
		  content="scrypt online, scrypt hash calculator,scrypt hash checker,scrypt tutorial,scrypt,OpenPGP,Good Password Hashing Functions,PBKDF2,pbkdf2,scrypt,OpenPGP, how scrypt works"/>

	<meta name="author" content="CRYPO" />
	<meta name="robots" content="index,follow" />
	<meta name="googlebot" content="index,follow" />
	<meta name="resource-type" content="document" />
	<meta name="classification" content="tools" />
	<meta name="language" content="en" />

	<%@ include file="header-script.jsp"%>

	<!-- JSON-LD markup generated by Google Structured Data Markup Helper. -->
	<script type="application/ld+json">
{
  "@context" : "http://schema.org",
  "@type" : "SoftwareApplication",
  "name" : "Online Scrypt Hash Generator, Hash Checker",
  "image" : "https://github.com/anishnath/crypto-tool/blob/master/scrypt.png",
  "url" : "https://8gwifi.org/scrypt.jsp",
  "author" : {
    "@type" : "Person",
    "name" : "Anish Nath"
  },
  "datePublished" : "2018-02-22",
  "applicationCategory" : [ "Scrypt reverse", "Scrypt online", "Scrypt hash calculator","OpenPGP,Good Password Hashing Function","Scrypt hash online","Scrypt laravel","Good Password Hashing Functions"],
  "downloadUrl" : "https://8gwifi.org/scrypt.jsp",
  "operatingSystem" : "Linux,Unix,Windows,Redhat,RHEL,Fedora,Ubuntu",
  "requirements" : "Scrypt password hash generation online and hash checker bcrypt reverse,Scrypt hash online,bcrypt hash cracker,Scrypt Password Hashing Functions",
  "softwareVersion" : "v1.0"
}
</script>


	<script type="text/javascript">
		$(document).ready(function() {


			$('#password').keyup(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#salt').keyup(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#workparam').change(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#memoryparam').change(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#parallelizationparam').change(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});

			$('#length').change(function(event) {
				//
				// event.preventDefault();
				$('#form').delay(200).submit()
			});


			$('#hash').keyup(function(event) {
				$('#form').delay(200).submit()
			});



			$('#form').submit(function(event) {
				//
				$('#output').html('<img src="images/712.GIF"> loading...');
				event.preventDefault();
				$.ajax({
					type : "POST",
					url : "BCCryptFunctionality", //this is my servlet

					data : $("#form").serialize(),
					success : function(msg) {
						$('#output').empty();
						$('#output').append(msg);

					}
				});
			});

		});
	</script>
</head>
<%@ include file="body-script.jsp"%>

<h1 class="mt-4">scrypt hash generator</h1>
<hr>


<div id="loading" style="display: none;">
	<img src="images/712.GIF" alt="" />Loading!
</div>


			<form id="form" method="POST">
				<input type="hidden" name="methodName" id="methodName"
					   value="CALCULATE_SCRYPT">


				<div class="form-group">
					<label for="password">Password</label>
					<input type="text" name="password" class="form-control" id="password"  placeholder="Enter password to generate bcrypt hash">
				</div>

				<hr>

				<div class="form-group">
					<label for="hash">Validate Hash</label>
					<input type="text" name="hash" class="form-control" id="hash" aria-describedby="emailHelp" placeholder="SCrypt hash to check against the password">
				</div>

				<hr>

				<div class="form-group">
					<label for="salt">Salt</label>
					<input type="text" name="salt" class="form-control" id="salt"  value="randomsaltvalue" placeholder="salt">
				</div>



				<b>N</b>
				<select name="workparam" id="workparam">
					<option selected value="<%="2048"%>">2048</option>
					<%
						String[] validList =  { "2", "4",
								"8", "16", "32",
								"64", "128", "256",
								"512", "1024",
								"2048", "4096", "8192",
								"16384", "32768", "65536" };
						for (int i = 0; i < validList.length; i++) {
							String param = validList[i];
					%>
					<option value="<%=param%>"><%=param%></option>
					<%	} %>
				</select>
				<br/>

				<b>	R </b>
				<select name="memoryparam" id="memoryparam">
					<option selected value="<%="8"%>">8</option>
					<%
						for (int i = 1; i < 200; i++) {
					%>
					<option value="<%=i%>"><%=i%></option>
					<%	} %>
				</select>
				<br/>
				<b> P</b>

				<select name="parallelizationparam" id="parallelizationparam">
					<option selected value="<%="1"%>">1</option>
					<%
						for (int i = 1; i < 20; i++) {
					%>
					<option value="<%=i%>"><%=i%></option>
					<%	} %>
				</select>

				<br/>
				<b> Length </b>

				<select name="length" id="length">
					<option selected value="<%="32"%>">32</option>
					<%
						for (int i = 1; i < 3000; i++) {
					%>
					<option value="<%=i%>"><%=i%></option>
					<%	} %>
				</select>
				</form>

				<hr>

				<div id="output"></div>

				<hr>

				<div class="sharethis-inline-share-buttons"></div>
				<%@ include file="thanks.jsp"%>

				<hr>

				<%@ include file="footer_adsense.jsp"%>

				<h2 class="mt-4" id="thersaalgorithm">Scrypt</h2>

				<p>The scrypt key derivation function was originally developed by Colin Percival and published in 2009 for use in the Tarsnap online backup system and is designed to be far more secure against hardware brute-force attacks than alternative functions such as PBKDF2 or bcrypt.</p>
				<p>cpuCost(N) - cpu cost of the algorithm (as defined in scrypt this is N). must be power of 2 greater than 1. Default is currently 16,348 or 2^14) <br/>
				<p>memoryCost(R) - memory cost of the algorithm (as defined in scrypt this is r) Default is currently 8. </p>
				<p>parallelization(P) - the parallelization of the algorithm (as defined in scrypt this is p) Default is currently 1. Note that the implementation does not currently take advantage of parallelization.</p><br/>
				<p>keyLength - key length for the algorithm (as defined in scrypt this is dkLen). The default is currently 32. </p>
				<p>saltLength(S) - salt length (as defined in scrypt this is the length of S). The default is currently 64 <p><br/>
				<p>The recommended parameters for interactive logins as of 2009 are N=16384,
				r=8, p=1. They should be increased as memory latency and CPU parallelism
				increases. Remember to get a good random salt</p>
<%@ include file="addcomments.jsp"%>

</div>

<%@ include file="body-close.jsp"%>
